// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.nomade.web;

import com.nomade.domain.Account;
import com.nomade.domain.Album;
import com.nomade.domain.Comment;
import com.nomade.domain.DangerPratique;
import com.nomade.domain.EtapeVehicule;
import com.nomade.domain.EtapeVoyage;
import com.nomade.domain.FileMsg;
import com.nomade.domain.InfoPratique;
import com.nomade.domain.PointPacours;
import com.nomade.domain.Profil;
import com.nomade.domain.Relation;
import com.nomade.domain.UserNomade;
import com.nomade.domain.Vehicule;
import com.nomade.domain.Voyage;
import com.nomade.service.AccountService;
import com.nomade.service.AlbumService;
import com.nomade.service.DangerPratiqueService;
import com.nomade.service.EtapeVehiculeService;
import com.nomade.service.EtapeVoyageService;
import com.nomade.service.FileMsgService;
import com.nomade.service.InfoPratiqueService;
import com.nomade.service.PointParcoursService;
import com.nomade.service.ProfilService;
import com.nomade.service.RelationService;
import com.nomade.service.UserService;
import com.nomade.service.VehiculeService;
import com.nomade.service.VoyageService;
import com.nomade.web.ApplicationConversionServiceFactoryBean;
import java.math.BigInteger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    AccountService ApplicationConversionServiceFactoryBean.accountService;
    
    @Autowired
    AlbumService ApplicationConversionServiceFactoryBean.albumService;
    
    @Autowired
    DangerPratiqueService ApplicationConversionServiceFactoryBean.dangerPratiqueService;
    
    @Autowired
    EtapeVehiculeService ApplicationConversionServiceFactoryBean.etapeVehiculeService;
    
    @Autowired
    EtapeVoyageService ApplicationConversionServiceFactoryBean.etapeVoyageService;
    
    @Autowired
    FileMsgService ApplicationConversionServiceFactoryBean.fileMsgService;
    
    @Autowired
    InfoPratiqueService ApplicationConversionServiceFactoryBean.infoPratiqueService;
    
    @Autowired
    PointParcoursService ApplicationConversionServiceFactoryBean.pointParcoursService;
    
    @Autowired
    ProfilService ApplicationConversionServiceFactoryBean.profilService;
    
    @Autowired
    RelationService ApplicationConversionServiceFactoryBean.relationService;
    
    @Autowired
    UserService ApplicationConversionServiceFactoryBean.userService;
    
    @Autowired
    VehiculeService ApplicationConversionServiceFactoryBean.vehiculeService;
    
    @Autowired
    VoyageService ApplicationConversionServiceFactoryBean.voyageService;
    
    public Converter<Account, String> ApplicationConversionServiceFactoryBean.getAccountToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nomade.domain.Account, java.lang.String>() {
            public String convert(Account account) {
                return new StringBuilder().append(account.getEmail()).append(' ').append(account.getFullName()).append(' ').append(account.getBirthDate()).append(' ').append(account.getAdress()).toString();
            }
        };
    }
    
    public Converter<BigInteger, Account> ApplicationConversionServiceFactoryBean.getIdToAccountConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.nomade.domain.Account>() {
            public com.nomade.domain.Account convert(java.math.BigInteger id) {
                return accountService.findAccount(id);
            }
        };
    }
    
    public Converter<String, Account> ApplicationConversionServiceFactoryBean.getStringToAccountConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nomade.domain.Account>() {
            public com.nomade.domain.Account convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Account.class);
            }
        };
    }
    
    public Converter<Album, String> ApplicationConversionServiceFactoryBean.getAlbumToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nomade.domain.Album, java.lang.String>() {
            public String convert(Album album) {
                return new StringBuilder().append(album.getNumPhoto()).append(' ').append(album.get_id()).append(' ').append(album.getName()).append(' ').append(album.getCreated()).toString();
            }
        };
    }
    
    public Converter<BigInteger, Album> ApplicationConversionServiceFactoryBean.getIdToAlbumConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.nomade.domain.Album>() {
            public com.nomade.domain.Album convert(java.math.BigInteger id) {
                return albumService.findAlbum(id);
            }
        };
    }
    
    public Converter<String, Album> ApplicationConversionServiceFactoryBean.getStringToAlbumConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nomade.domain.Album>() {
            public com.nomade.domain.Album convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Album.class);
            }
        };
    }
    
    public Converter<Comment, String> ApplicationConversionServiceFactoryBean.getCommentToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nomade.domain.Comment, java.lang.String>() {
            public String convert(Comment comment) {
                return new StringBuilder().append(comment.getCommentaire()).append(' ').append(comment.getCreated()).append(' ').append(comment.getBusinessId()).append(' ').append(comment.getPhotoId()).toString();
            }
        };
    }
    
    public Converter<String, Comment> ApplicationConversionServiceFactoryBean.getStringToCommentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nomade.domain.Comment>() {
            public com.nomade.domain.Comment convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Comment.class);
            }
        };
    }
    
    public Converter<DangerPratique, String> ApplicationConversionServiceFactoryBean.getDangerPratiqueToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nomade.domain.DangerPratique, java.lang.String>() {
            public String convert(DangerPratique dangerPratique) {
                return new StringBuilder().append(dangerPratique.getIcon()).append(' ').append(dangerPratique.getTitle()).append(' ').append(dangerPratique.getSelecteur()).append(' ').append(dangerPratique.getSelecteur1()).toString();
            }
        };
    }
    
    public Converter<BigInteger, DangerPratique> ApplicationConversionServiceFactoryBean.getIdToDangerPratiqueConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.nomade.domain.DangerPratique>() {
            public com.nomade.domain.DangerPratique convert(java.math.BigInteger id) {
                return dangerPratiqueService.findDangerPratique(id);
            }
        };
    }
    
    public Converter<String, DangerPratique> ApplicationConversionServiceFactoryBean.getStringToDangerPratiqueConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nomade.domain.DangerPratique>() {
            public com.nomade.domain.DangerPratique convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), DangerPratique.class);
            }
        };
    }
    
    public Converter<EtapeVehicule, String> ApplicationConversionServiceFactoryBean.getEtapeVehiculeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nomade.domain.EtapeVehicule, java.lang.String>() {
            public String convert(EtapeVehicule etapeVehicule) {
                return new StringBuilder().append(etapeVehicule.getDescription()).append(' ').append(etapeVehicule.getDateEtape()).append(' ').append(etapeVehicule.getUserPhoto()).append(' ').append(etapeVehicule.getLocation()).toString();
            }
        };
    }
    
    public Converter<BigInteger, EtapeVehicule> ApplicationConversionServiceFactoryBean.getIdToEtapeVehiculeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.nomade.domain.EtapeVehicule>() {
            public com.nomade.domain.EtapeVehicule convert(java.math.BigInteger id) {
                return etapeVehiculeService.findEtapeVehicule(id);
            }
        };
    }
    
    public Converter<String, EtapeVehicule> ApplicationConversionServiceFactoryBean.getStringToEtapeVehiculeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nomade.domain.EtapeVehicule>() {
            public com.nomade.domain.EtapeVehicule convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), EtapeVehicule.class);
            }
        };
    }
    
    public Converter<EtapeVoyage, String> ApplicationConversionServiceFactoryBean.getEtapeVoyageToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nomade.domain.EtapeVoyage, java.lang.String>() {
            public String convert(EtapeVoyage etapeVoyage) {
                return new StringBuilder().append(etapeVoyage.getDescription()).append(' ').append(etapeVoyage.getDateEtape()).append(' ').append(etapeVoyage.getUserPhoto()).append(' ').append(etapeVoyage.getLocation()).toString();
            }
        };
    }
    
    public Converter<BigInteger, EtapeVoyage> ApplicationConversionServiceFactoryBean.getIdToEtapeVoyageConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.nomade.domain.EtapeVoyage>() {
            public com.nomade.domain.EtapeVoyage convert(java.math.BigInteger id) {
                return etapeVoyageService.findEtapeVoyage(id);
            }
        };
    }
    
    public Converter<String, EtapeVoyage> ApplicationConversionServiceFactoryBean.getStringToEtapeVoyageConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nomade.domain.EtapeVoyage>() {
            public com.nomade.domain.EtapeVoyage convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), EtapeVoyage.class);
            }
        };
    }
    
    public Converter<FileMsg, String> ApplicationConversionServiceFactoryBean.getFileMsgToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nomade.domain.FileMsg, java.lang.String>() {
            public String convert(FileMsg fileMsg) {
                return new StringBuilder().append(fileMsg.getNumberUnreadMsg()).toString();
            }
        };
    }
    
    public Converter<BigInteger, FileMsg> ApplicationConversionServiceFactoryBean.getIdToFileMsgConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.nomade.domain.FileMsg>() {
            public com.nomade.domain.FileMsg convert(java.math.BigInteger id) {
                return fileMsgService.findFileMsg(id);
            }
        };
    }
    
    public Converter<String, FileMsg> ApplicationConversionServiceFactoryBean.getStringToFileMsgConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nomade.domain.FileMsg>() {
            public com.nomade.domain.FileMsg convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), FileMsg.class);
            }
        };
    }
    
    public Converter<InfoPratique, String> ApplicationConversionServiceFactoryBean.getInfoPratiqueToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nomade.domain.InfoPratique, java.lang.String>() {
            public String convert(InfoPratique infoPratique) {
                return new StringBuilder().append(infoPratique.getIcon()).append(' ').append(infoPratique.getTitle()).append(' ').append(infoPratique.getSelecteur()).append(' ').append(infoPratique.getSelecteur1()).toString();
            }
        };
    }
    
    public Converter<BigInteger, InfoPratique> ApplicationConversionServiceFactoryBean.getIdToInfoPratiqueConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.nomade.domain.InfoPratique>() {
            public com.nomade.domain.InfoPratique convert(java.math.BigInteger id) {
                return infoPratiqueService.findInfoPratique(id);
            }
        };
    }
    
    public Converter<String, InfoPratique> ApplicationConversionServiceFactoryBean.getStringToInfoPratiqueConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nomade.domain.InfoPratique>() {
            public com.nomade.domain.InfoPratique convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), InfoPratique.class);
            }
        };
    }
    
    public Converter<PointPacours, String> ApplicationConversionServiceFactoryBean.getPointPacoursToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nomade.domain.PointPacours, java.lang.String>() {
            public String convert(PointPacours pointPacours) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<BigInteger, PointPacours> ApplicationConversionServiceFactoryBean.getIdToPointPacoursConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.nomade.domain.PointPacours>() {
            public com.nomade.domain.PointPacours convert(java.math.BigInteger id) {
                return pointParcoursService.findPointPacours(id);
            }
        };
    }
    
    public Converter<String, PointPacours> ApplicationConversionServiceFactoryBean.getStringToPointPacoursConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nomade.domain.PointPacours>() {
            public com.nomade.domain.PointPacours convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), PointPacours.class);
            }
        };
    }
    
    public Converter<Profil, String> ApplicationConversionServiceFactoryBean.getProfilToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nomade.domain.Profil, java.lang.String>() {
            public String convert(Profil profil) {
                return new StringBuilder().append(profil.getPseudo()).append(' ').append(profil.getWebsite()).append(' ').append(profil.getFile()).append(' ').append(profil.getButVoyage()).toString();
            }
        };
    }
    
    public Converter<BigInteger, Profil> ApplicationConversionServiceFactoryBean.getIdToProfilConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.nomade.domain.Profil>() {
            public com.nomade.domain.Profil convert(java.math.BigInteger id) {
                return profilService.findProfil(id);
            }
        };
    }
    
    public Converter<String, Profil> ApplicationConversionServiceFactoryBean.getStringToProfilConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nomade.domain.Profil>() {
            public com.nomade.domain.Profil convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Profil.class);
            }
        };
    }
    
    public Converter<Relation, String> ApplicationConversionServiceFactoryBean.getRelationToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nomade.domain.Relation, java.lang.String>() {
            public String convert(Relation relation) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<BigInteger, Relation> ApplicationConversionServiceFactoryBean.getIdToRelationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.nomade.domain.Relation>() {
            public com.nomade.domain.Relation convert(java.math.BigInteger id) {
                return relationService.findRelation(id);
            }
        };
    }
    
    public Converter<String, Relation> ApplicationConversionServiceFactoryBean.getStringToRelationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nomade.domain.Relation>() {
            public com.nomade.domain.Relation convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Relation.class);
            }
        };
    }
    
    public Converter<UserNomade, String> ApplicationConversionServiceFactoryBean.getUserNomadeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nomade.domain.UserNomade, java.lang.String>() {
            public String convert(UserNomade userNomade) {
                return new StringBuilder().append(userNomade.getUserName()).append(' ').append(userNomade.getPassword()).append(' ').append(userNomade.getAccountExpiration()).append(' ').append(userNomade.getCredentialExpiration()).toString();
            }
        };
    }
    
    public Converter<BigInteger, UserNomade> ApplicationConversionServiceFactoryBean.getIdToUserNomadeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.nomade.domain.UserNomade>() {
            public com.nomade.domain.UserNomade convert(java.math.BigInteger id) {
                return userService.findUserNomade(id);
            }
        };
    }
    
    public Converter<String, UserNomade> ApplicationConversionServiceFactoryBean.getStringToUserNomadeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nomade.domain.UserNomade>() {
            public com.nomade.domain.UserNomade convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), UserNomade.class);
            }
        };
    }
    
    public Converter<Vehicule, String> ApplicationConversionServiceFactoryBean.getVehiculeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nomade.domain.Vehicule, java.lang.String>() {
            public String convert(Vehicule vehicule) {
                return new StringBuilder().append(vehicule.getVehiculeName()).append(' ').append(vehicule.getPhoto()).append(' ').append(vehicule.getModel()).append(' ').append(vehicule.getCouleur()).toString();
            }
        };
    }
    
    public Converter<BigInteger, Vehicule> ApplicationConversionServiceFactoryBean.getIdToVehiculeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.nomade.domain.Vehicule>() {
            public com.nomade.domain.Vehicule convert(java.math.BigInteger id) {
                return vehiculeService.findVehicule(id);
            }
        };
    }
    
    public Converter<String, Vehicule> ApplicationConversionServiceFactoryBean.getStringToVehiculeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nomade.domain.Vehicule>() {
            public com.nomade.domain.Vehicule convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Vehicule.class);
            }
        };
    }
    
    public Converter<Voyage, String> ApplicationConversionServiceFactoryBean.getVoyageToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nomade.domain.Voyage, java.lang.String>() {
            public String convert(Voyage voyage) {
                return new StringBuilder().append(voyage.getTitle()).append(' ').append(voyage.getNbreParcours()).toString();
            }
        };
    }
    
    public Converter<BigInteger, Voyage> ApplicationConversionServiceFactoryBean.getIdToVoyageConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.nomade.domain.Voyage>() {
            public com.nomade.domain.Voyage convert(java.math.BigInteger id) {
                return voyageService.findVoyage(id);
            }
        };
    }
    
    public Converter<String, Voyage> ApplicationConversionServiceFactoryBean.getStringToVoyageConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nomade.domain.Voyage>() {
            public com.nomade.domain.Voyage convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Voyage.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAccountToStringConverter());
        registry.addConverter(getIdToAccountConverter());
        registry.addConverter(getStringToAccountConverter());
        registry.addConverter(getAlbumToStringConverter());
        registry.addConverter(getIdToAlbumConverter());
        registry.addConverter(getStringToAlbumConverter());
        registry.addConverter(getCommentToStringConverter());
        registry.addConverter(getStringToCommentConverter());
        registry.addConverter(getDangerPratiqueToStringConverter());
        registry.addConverter(getIdToDangerPratiqueConverter());
        registry.addConverter(getStringToDangerPratiqueConverter());
        registry.addConverter(getEtapeVehiculeToStringConverter());
        registry.addConverter(getIdToEtapeVehiculeConverter());
        registry.addConverter(getStringToEtapeVehiculeConverter());
        registry.addConverter(getEtapeVoyageToStringConverter());
        registry.addConverter(getIdToEtapeVoyageConverter());
        registry.addConverter(getStringToEtapeVoyageConverter());
        registry.addConverter(getFileMsgToStringConverter());
        registry.addConverter(getIdToFileMsgConverter());
        registry.addConverter(getStringToFileMsgConverter());
        registry.addConverter(getInfoPratiqueToStringConverter());
        registry.addConverter(getIdToInfoPratiqueConverter());
        registry.addConverter(getStringToInfoPratiqueConverter());
        registry.addConverter(getPointPacoursToStringConverter());
        registry.addConverter(getIdToPointPacoursConverter());
        registry.addConverter(getStringToPointPacoursConverter());
        registry.addConverter(getProfilToStringConverter());
        registry.addConverter(getIdToProfilConverter());
        registry.addConverter(getStringToProfilConverter());
        registry.addConverter(getRelationToStringConverter());
        registry.addConverter(getIdToRelationConverter());
        registry.addConverter(getStringToRelationConverter());
        registry.addConverter(getUserNomadeToStringConverter());
        registry.addConverter(getIdToUserNomadeConverter());
        registry.addConverter(getStringToUserNomadeConverter());
        registry.addConverter(getVehiculeToStringConverter());
        registry.addConverter(getIdToVehiculeConverter());
        registry.addConverter(getStringToVehiculeConverter());
        registry.addConverter(getVoyageToStringConverter());
        registry.addConverter(getIdToVoyageConverter());
        registry.addConverter(getStringToVoyageConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
